//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PowerBuild.MSBuild {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PowerBuild.MSBuild.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to cancel the build....
        /// </summary>
        internal static string AbortingBuild {
            get {
                return ResourceManager.GetString("AbortingBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1050: Specify which project or solution file to use because the folder &quot;{0}&quot; contains more than one project or solution file..
        /// </summary>
        internal static string AmbiguousProjectDirectoryError {
            get {
                return ResourceManager.GetString("AmbiguousProjectDirectoryError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1011: Specify which project or solution file to use because this folder contains more than one project or solution file..
        /// </summary>
        internal static string AmbiguousProjectError {
            get {
                return ResourceManager.GetString("AmbiguousProjectError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build started..
        /// </summary>
        internal static string BuildStarted {
            get {
                return ResourceManager.GetString("BuildStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1027: The /noautoresponse switch cannot be specified in the MSBuild.rsp auto-response file, nor in any response file that is referenced by the auto-response file..
        /// </summary>
        internal static string CannotAutoDisableAutoResponseFile {
            get {
                return ResourceManager.GetString("CannotAutoDisableAutoResponseFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : Configuration error {0}: {1}.
        /// </summary>
        internal static string ConfigurationFailurePrefixNoErrorCode {
            get {
                return ResourceManager.GetString("ConfigurationFailurePrefixNoErrorCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft (R) Build Engine version {0}
        ///Copyright (C) Microsoft Corporation. All rights reserved.
        ///.
        /// </summary>
        internal static string CopyrightMessage {
            get {
                return ResourceManager.GetString("CopyrightMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1048: Solution files cannot be debugged directly. Run MSBuild first with an environment variable MSBUILDEMITSOLUTION=1 to create a corresponding &quot;.sln.metaproj&quot; file. Then debug that..
        /// </summary>
        internal static string DebuggingSolutionFiles {
            get {
                return ResourceManager.GetString("DebuggingSolutionFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1008: Only one project can be specified..
        /// </summary>
        internal static string DuplicateProjectSwitchError {
            get {
                return ResourceManager.GetString("DuplicateProjectSwitchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1025: An internal failure occurred while running MSBuild..
        /// </summary>
        internal static string FatalError {
            get {
                return ResourceManager.GetString("FatalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} ({1},{2}).
        /// </summary>
        internal static string FileLocation {
            get {
                return ResourceManager.GetString("FileLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax:              MSBuild.exe [options] [project file | directory]
        ///.
        /// </summary>
        internal static string HelpMessage_1_Syntax {
            get {
                return ResourceManager.GetString("HelpMessage_1_Syntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /property:&lt;n&gt;=&lt;v&gt;  Set or override these project-level properties. &lt;n&gt; is
        ///                     the property name, and &lt;v&gt; is the property value. Use a
        ///                     semicolon or a comma to separate multiple properties, or
        ///                     specify each property separately. (Short form: /p)
        ///                     Example:
        ///                       /property:WarningLevel=2;OutDir=bin\Debug\
        ///.
        /// </summary>
        internal static string HelpMessage_10_PropertySwitch {
            get {
                return ResourceManager.GetString("HelpMessage_10_PropertySwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /logger:&lt;logger&gt;   Use this logger to log events from MSBuild. To specify
        ///                     multiple loggers, specify each logger separately.
        ///                     The &lt;logger&gt; syntax is:
        ///                       [&lt;logger class&gt;,]&lt;logger assembly&gt;[;&lt;logger parameters&gt;]
        ///                     The &lt;logger class&gt; syntax is:
        ///                       [&lt;partial or full namespace&gt;.]&lt;logger class name&gt;
        ///                     The &lt;logger assembly&gt; syntax is:
        ///                       {&lt;assembly name&gt;[,&lt;strong name&gt;] [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpMessage_11_LoggerSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_11_LoggerSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /verbosity:&lt;level&gt; Display this amount of information in the event log.
        ///                     The available verbosity levels are: q[uiet], m[inimal],
        ///                     n[ormal], d[etailed], and diag[nostic]. (Short form: /v)
        ///                     Example:
        ///                       /verbosity:quiet
        ///.
        /// </summary>
        internal static string HelpMessage_12_VerbositySwitch {
            get {
                return ResourceManager.GetString("HelpMessage_12_VerbositySwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /consoleloggerparameters:&lt;parameters&gt;
        ///                     Parameters to console logger. (Short form: /clp)
        ///                     The available parameters are:
        ///                        PerformanceSummary--Show time spent in tasks, targets
        ///                            and projects.
        ///                        Summary--Show error and warning summary at the end.
        ///                        NoSummary--Don&apos;t show error and warning summary at the
        ///                            end.
        ///                        ErrorsOnly- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpMessage_13_ConsoleLoggerParametersSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_13_ConsoleLoggerParametersSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /noconsolelogger   Disable the default console logger and do not log events
        ///                     to the console. (Short form: /noconlog)
        ///.
        /// </summary>
        internal static string HelpMessage_14_NoConsoleLoggerSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_14_NoConsoleLoggerSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /validate          Validate the project against the default schema. (Short
        ///                     form: /val)
        ///
        ///  /validate:&lt;schema&gt; Validate the project against the specified schema. (Short
        ///                     form: /val)
        ///                     Example:
        ///                       /validate:MyExtendedBuildSchema.xsd
        ///.
        /// </summary>
        internal static string HelpMessage_15_ValidateSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_15_ValidateSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Examples:
        ///
        ///        MSBuild MyApp.sln /t:Rebuild /p:Configuration=Release
        ///        MSBuild MyApp.csproj /t:Clean 
        ///                             /p:Configuration=Debug;TargetFrameworkVersion=v3.5
        ///    .
        /// </summary>
        internal static string HelpMessage_16_Examples {
            get {
                return ResourceManager.GetString("HelpMessage_16_Examples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /maxcpucount[:n]   Specifies the maximum number of concurrent processes to 
        ///                     build with. If the switch is not used, the default
        ///                     value used is 1. If the switch is used without a value
        ///                     MSBuild will use up to the number of processors on the 
        ///                     computer. (Short form: /m[:n])
        ///      .
        /// </summary>
        internal static string HelpMessage_17_MaximumCPUSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_17_MaximumCPUSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /distributedlogger:&lt;central logger&gt;*&lt;forwarding logger&gt;                     
        ///                     Use this logger to log events from MSBuild, attaching a
        ///                     different logger instance to each node. To specify
        ///                     multiple loggers, specify each logger separately. 
        ///                     (Short form /dl)
        ///                     The &lt;logger&gt; syntax is:
        ///                       [&lt;logger class&gt;,]&lt;logger assembly&gt;[;&lt;logger parameters&gt;]
        ///                     The &lt;logger class&gt; sy [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpMessage_18_DistributedLoggerSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_18_DistributedLoggerSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /ignoreprojectextensions:&lt;extensions&gt;
        ///                     List of extensions to ignore when determining which 
        ///                     project file to build. Use a semicolon or a comma 
        ///                     to separate multiple extensions.
        ///                     (Short form: /ignore)
        ///                     Example:
        ///                       /ignoreprojectextensions:.sln
        ///    .
        /// </summary>
        internal static string HelpMessage_19_IgnoreProjectExtensionsSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_19_IgnoreProjectExtensionsSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description:         Builds the specified targets in the project file. If
        ///                     a project file is not specified, MSBuild searches the
        ///                     current working directory for a file that has a file
        ///                     extension that ends in &quot;proj&quot; and uses that file.  If
        ///                     a directory is specified, MSBuild searches that
        ///                     directory for a project file.
        ///.
        /// </summary>
        internal static string HelpMessage_2_Description {
            get {
                return ResourceManager.GetString("HelpMessage_2_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /fileLogger[n]     Logs the build output to a file. By default
        ///                     the file is in the current directory and named 
        ///                     &quot;msbuild[n].log&quot;. Events from all nodes are combined into
        ///                     a single log. The location of the file and other
        ///                     parameters for the fileLogger can be specified through 
        ///                     the addition of the &quot;/fileLoggerParameters[n]&quot; switch.
        ///                     &quot;n&quot; if present can be a digit from 1-9, allowing  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpMessage_20_FileLoggerSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_20_FileLoggerSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /distributedFileLogger                                                       
        ///                     Logs the build output to multiple log files, one log file
        ///                     per MSBuild node. The initial location for these files is
        ///                     the current directory. By default the files are called 
        ///                     &quot;MSBuild&lt;nodeid&gt;.log&quot;. The location of the files and
        ///                     other parameters for the fileLogger can be specified 
        ///                     with the addition of  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpMessage_21_DistributedFileLoggerSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_21_DistributedFileLoggerSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /fileloggerparameters[n]:&lt;parameters&gt;                                
        ///                     Provides any extra parameters for file loggers.
        ///                     The presence of this switch implies the 
        ///                     corresponding /filelogger[n] switch.
        ///                     &quot;n&quot; if present can be a digit from 1-9.
        ///                     /fileloggerparameters is also used by any distributed
        ///                     file logger, see description of /distributedFileLogger.
        ///                     (Short for [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpMessage_22_FileLoggerParametersSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_22_FileLoggerParametersSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /toolsversion:&lt;version&gt;
        ///                     The version of the MSBuild Toolset (tasks, targets, etc.)
        ///                     to use during build. This version will override the 
        ///                     versions specified by individual projects. (Short form: 
        ///                     /tv)
        ///                     Example:
        ///                       /toolsversion:3.5
        ///   .
        /// </summary>
        internal static string HelpMessage_23_ToolsVersionSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_23_ToolsVersionSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /nodeReuse:&lt;parameters&gt;
        ///                     Enables or Disables the reuse of MSBuild nodes.
        ///                     The parameters are:
        ///                     True --Nodes will remain after the build completes
        ///                            and will be reused by subsequent builds (default)
        ///                     False--Nodes will not remain after the build completes
        ///                     (Short form: /nr)
        ///                     Example:
        ///                       /nr:true
        ///    .
        /// </summary>
        internal static string HelpMessage_24_NodeReuse {
            get {
                return ResourceManager.GetString("HelpMessage_24_NodeReuse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /preprocess[:file] 
        ///                     Creates a single, aggregated project file by
        ///                     inlining all the files that would be imported during a
        ///                     build, with their boundaries marked. This can be
        ///                     useful for figuring out what files are being imported
        ///                     and from where, and what they will contribute to
        ///                     the build. By default the output is written to
        ///                     the console window. If the path to an [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpMessage_25_PreprocessSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_25_PreprocessSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /detailedsummary 
        ///                     Shows detailed information at the end of the build
        ///                     about the configurations built and how they were
        ///                     scheduled to nodes. 
        ///                     (Short form: /ds)
        ///    .
        /// </summary>
        internal static string HelpMessage_26_DetailedSummarySwitch {
            get {
                return ResourceManager.GetString("HelpMessage_26_DetailedSummarySwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /debug
        ///                     Causes a debugger prompt to appear immediately so that 
        ///                     Visual Studio can be attached for you to debug the 
        ///                     MSBuild XML and any tasks and loggers it uses.
        ///   .
        /// </summary>
        internal static string HelpMessage_27_DebuggerSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_27_DebuggerSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /warnaserror[:code[;code2]]
        ///                     List of warning codes to treats as errors.  Use a semicolon
        ///                     or a comma to separate multiple warning codes. To treat all
        ///                     warnings as errors use the switch with no values.
        ///                     (Short form: /err[:c;[c2]])
        ///
        ///                     Example:
        ///                       /warnaserror:MSB4130
        ///
        ///                     When a warning is treated as an error the target will
        ///                     continue to execut [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpMessage_28_WarnAsErrorSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_28_WarnAsErrorSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /warnasmessage[:code[;code2]]
        ///                     List of warning codes to treats as low importance
        ///                     messages.  Use a semicolon or a comma to separate
        ///                     multiple warning codes.
        ///                     (Short form: /nowarn[:c;[c2]])
        ///
        ///                     Example:
        ///                       /warnasmessage:MSB3026
        ///    .
        /// </summary>
        internal static string HelpMessage_29_WarnAsMessageSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_29_WarnAsMessageSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switches:
        ///.
        /// </summary>
        internal static string HelpMessage_3_SwitchesHeader {
            get {
                return ResourceManager.GetString("HelpMessage_3_SwitchesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /help              Display this usage message. (Short form: /? or /h)
        ///.
        /// </summary>
        internal static string HelpMessage_4_HelpSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_4_HelpSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /nologo            Do not display the startup banner and copyright message.
        ///.
        /// </summary>
        internal static string HelpMessage_5_NoLogoSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_5_NoLogoSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /version           Display version information only. (Short form: /ver)
        ///.
        /// </summary>
        internal static string HelpMessage_6_VersionSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_6_VersionSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   @&lt;file&gt;            Insert command-line settings from a text file. To specify
        ///                     multiple response files, specify each response file
        ///                     separately.
        ///                     
        ///                     Any response files named &quot;msbuild.rsp&quot; are automatically 
        ///                     consumed from the following locations: 
        ///                     (1) the directory of msbuild.exe
        ///                     (2) the directory of the first project or solution built
        ///.
        /// </summary>
        internal static string HelpMessage_7_ResponseFile {
            get {
                return ResourceManager.GetString("HelpMessage_7_ResponseFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /noautoresponse    Do not auto-include any MSBuild.rsp files. (Short form:
        ///                     /noautorsp)
        ///.
        /// </summary>
        internal static string HelpMessage_8_NoAutoResponseSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_8_NoAutoResponseSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   /target:&lt;targets&gt;  Build these targets in this project. Use a semicolon or a
        ///                     comma to separate multiple targets, or specify each
        ///                     target separately. (Short form: /t)
        ///                     Example:
        ///                       /target:Resources;Compile
        ///.
        /// </summary>
        internal static string HelpMessage_9_TargetSwitch {
            get {
                return ResourceManager.GetString("HelpMessage_9_TargetSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For switch syntax, type &quot;MSBuild /help&quot;.
        /// </summary>
        internal static string HelpPrompt {
            get {
                return ResourceManager.GetString("HelpPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : Configuration error MSB1043: The application could not start. {0}.
        /// </summary>
        internal static string InvalidConfigurationFile {
            get {
                return ResourceManager.GetString("InvalidConfigurationFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1036: There is an invalid extension in the /ignoreprojectextensions list. Extensions must start with a period &quot;.&quot;, have one or more characters after the period and not contain any invalid path characters or wildcards..
        /// </summary>
        internal static string InvalidExtensionToIgnore {
            get {
                return ResourceManager.GetString("InvalidExtensionToIgnore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1019: Logger switch was not correctly formed..
        /// </summary>
        internal static string InvalidLoggerError {
            get {
                return ResourceManager.GetString("InvalidLoggerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1030: Maximum CPU count is not valid. {0}.
        /// </summary>
        internal static string InvalidMaxCPUCountValue {
            get {
                return ResourceManager.GetString("InvalidMaxCPUCountValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1032: Maximum CPU count is not valid. Value must be an integer greater than zero and no more than 1024..
        /// </summary>
        internal static string InvalidMaxCPUCountValueOutsideRange {
            get {
                return ResourceManager.GetString("InvalidMaxCPUCountValueOutsideRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1033: Node number is not valid. {0}..
        /// </summary>
        internal static string InvalidNodeNumberValue {
            get {
                return ResourceManager.GetString("InvalidNodeNumberValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1034: Node number is not valid. Value must be an integer greater than zero..
        /// </summary>
        internal static string InvalidNodeNumberValueIsNegative {
            get {
                return ResourceManager.GetString("InvalidNodeNumberValueIsNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1042: Node reuse value is not valid. {0}..
        /// </summary>
        internal static string InvalidNodeReuseValue {
            get {
                return ResourceManager.GetString("InvalidNodeReuseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1047: File to preprocess to is not valid. {0}.
        /// </summary>
        internal static string InvalidPreprocessPath {
            get {
                return ResourceManager.GetString("InvalidPreprocessPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1006: Property is not valid..
        /// </summary>
        internal static string InvalidPropertyError {
            get {
                return ResourceManager.GetString("InvalidPropertyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : MSB1046: The schema &quot;{0}&quot; is not valid. {1}.
        /// </summary>
        internal static string InvalidSchemaFile {
            get {
                return ResourceManager.GetString("InvalidSchemaFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch: {0}.
        /// </summary>
        internal static string InvalidSwitchIndicator {
            get {
                return ResourceManager.GetString("InvalidSwitchIndicator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1040: ToolsVersion is not valid. {0}.
        /// </summary>
        internal static string InvalidToolsVersionError {
            get {
                return ResourceManager.GetString("InvalidToolsVersionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1018: Verbosity level is not valid..
        /// </summary>
        internal static string InvalidVerbosityError {
            get {
                return ResourceManager.GetString("InvalidVerbosityError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1021: Cannot create an instance of the logger. {0}.
        /// </summary>
        internal static string LoggerCreationError {
            get {
                return ResourceManager.GetString("LoggerCreationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : Logger error {0}: {1}.
        /// </summary>
        internal static string LoggerFailurePrefixNoErrorCode {
            get {
                return ResourceManager.GetString("LoggerFailurePrefixNoErrorCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : Logger error MSB1029: {0}.
        /// </summary>
        internal static string LoggerFailurePrefixWithErrorCode {
            get {
                return ResourceManager.GetString("LoggerFailurePrefixWithErrorCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1028: The logger failed unexpectedly..
        /// </summary>
        internal static string LoggerFatalError {
            get {
                return ResourceManager.GetString("LoggerFatalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1020: The logger was not found. Check the following: 1.) The logger name specified is the same as the name of the logger class. 2.) The logger class is &quot;public&quot; and implements the Microsoft.Build.Framework.ILogger interface. 3.) The path to the logger assembly is correct, or the logger can be loaded using only the assembly name provided..
        /// </summary>
        internal static string LoggerNotFoundError {
            get {
                return ResourceManager.GetString("LoggerNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1037: Specify one or more parameters for the console logger if using the /consoleLoggerParameters switch.
        /// </summary>
        internal static string MissingConsoleLoggerParameterError {
            get {
                return ResourceManager.GetString("MissingConsoleLoggerParameterError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1038: Specify one or more parameters for the file logger if using the /fileLoggerParameters switch.
        /// </summary>
        internal static string MissingFileLoggerParameterError {
            get {
                return ResourceManager.GetString("MissingFileLoggerParameterError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1035: Specify the project extensions to ignore..
        /// </summary>
        internal static string MissingIgnoreProjectExtensionsError {
            get {
                return ResourceManager.GetString("MissingIgnoreProjectExtensionsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1007: Specify a logger..
        /// </summary>
        internal static string MissingLoggerError {
            get {
                return ResourceManager.GetString("MissingLoggerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1031: Specify the maximum number of CPUs..
        /// </summary>
        internal static string MissingMaxCPUCountError {
            get {
                return ResourceManager.GetString("MissingMaxCPUCountError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1041: Specify one or more parameters for node reuse if using the /nodereuse switch.
        /// </summary>
        internal static string MissingNodeReuseParameterError {
            get {
                return ResourceManager.GetString("MissingNodeReuseParameterError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1003: Specify a project or solution file. The current working directory does not contain a project or solution file..
        /// </summary>
        internal static string MissingProjectError {
            get {
                return ResourceManager.GetString("MissingProjectError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1005: Specify a property and its value..
        /// </summary>
        internal static string MissingPropertyError {
            get {
                return ResourceManager.GetString("MissingPropertyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1012: Specify a response file..
        /// </summary>
        internal static string MissingResponseFileError {
            get {
                return ResourceManager.GetString("MissingResponseFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1004: Specify the name of the target..
        /// </summary>
        internal static string MissingTargetError {
            get {
                return ResourceManager.GetString("MissingTargetError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1039: Specify the version of the toolset..
        /// </summary>
        internal static string MissingToolsVersionError {
            get {
                return ResourceManager.GetString("MissingToolsVersionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1016: Specify the verbosity level..
        /// </summary>
        internal static string MissingVerbosityError {
            get {
                return ResourceManager.GetString("MissingVerbosityError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1051: Specify one or more warning codes to treat as low importance messages when using the /warnasmessage switch..
        /// </summary>
        internal static string MissingWarnAsMessageParameterError {
            get {
                return ResourceManager.GetString("MissingWarnAsMessageParameterError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1024: Only one schema can be specified for validation of the project..
        /// </summary>
        internal static string MultipleSchemasError {
            get {
                return ResourceManager.GetString("MultipleSchemasError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If MSBuild debugging does not work correctly, please verify that the &quot;Just My Code&quot; feature is enabled in Visual Studio, and that you have selected the managed debugger..
        /// </summary>
        internal static string NeedJustMyCode {
            get {
                return ResourceManager.GetString("NeedJustMyCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1049: The {0} parameter must be specified.
        /// </summary>
        internal static string ParameterRequiredError {
            get {
                return ResourceManager.GetString("ParameterRequiredError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some command line switches were read from the auto-response file &quot;{0}&quot;. To disable this file, use the &quot;/noautoresponse&quot; switch..
        /// </summary>
        internal static string PickedUpSwitchesFromAutoResponse {
            get {
                return ResourceManager.GetString("PickedUpSwitchesFromAutoResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Building the projects in this solution one at a time. To enable parallel build, please add the &quot;/m&quot; switch..
        /// </summary>
        internal static string PossiblyOmittedMaxCPUSwitch {
            get {
                return ResourceManager.GetString("PossiblyOmittedMaxCPUSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1009: Project file does not exist..
        /// </summary>
        internal static string ProjectNotFoundError {
            get {
                return ResourceManager.GetString("ProjectNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : MSB1045: Stopping because of syntax errors in project file..
        /// </summary>
        internal static string ProjectSchemaErrorHalt {
            get {
                return ResourceManager.GetString("ProjectSchemaErrorHalt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB4192: The project file &quot;{0}&quot; is in the &quot;.vcproj&quot; or &quot;.dsp&quot; file format, which MSBuild cannot build directly. Please convert the project by opening it in the Visual Studio IDE or running the conversion tool, or, for &quot;.vcproj&quot;, use MSBuild to build the solution file containing the project instead..
        /// </summary>
        internal static string ProjectUpgradeNeededToVcxProj {
            get {
                return ResourceManager.GetString("ProjectUpgradeNeededToVcxProj", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1023: Cannot read the response file. {0}.
        /// </summary>
        internal static string ReadResponseFileError {
            get {
                return ResourceManager.GetString("ReadResponseFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1013: The response file was specified twice. A response file can be specified only once. Any files named &quot;msbuild.rsp&quot; in the directory of MSBuild.exe or in the directory of the first project or solution built (which if no project or solution is specified is the current working directory) were automatically used as response files..
        /// </summary>
        internal static string RepeatedResponseFileError {
            get {
                return ResourceManager.GetString("RepeatedResponseFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1022: Response file does not exist..
        /// </summary>
        internal static string ResponseFileNotFoundError {
            get {
                return ResourceManager.GetString("ResponseFileNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validating project using schema file &quot;{0}&quot;..
        /// </summary>
        internal static string SchemaFileLocation {
            get {
                return ResourceManager.GetString("SchemaFileLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1026: Schema file does not exist..
        /// </summary>
        internal static string SchemaNotFoundError {
            get {
                return ResourceManager.GetString("SchemaNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1026: Schema file &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string SchemaNotFoundErrorWithFile {
            get {
                return ResourceManager.GetString("SchemaNotFoundErrorWithFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : MSB1044: Project is not valid. {0}.
        /// </summary>
        internal static string SchemaValidationError {
            get {
                return ResourceManager.GetString("SchemaValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1002: This switch does not take any parameters..
        /// </summary>
        internal static string UnexpectedParametersError {
            get {
                return ResourceManager.GetString("UnexpectedParametersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1001: Unknown switch..
        /// </summary>
        internal static string UnknownSwitchError {
            get {
                return ResourceManager.GetString("UnknownSwitchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions..
        /// </summary>
        internal static string UnsupportedOS {
            get {
                return ResourceManager.GetString("UnsupportedOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forcing load of Microsoft.Build.Engine because MSBUILDOLDOM=1....
        /// </summary>
        internal static string Using35Engine {
            get {
                return ResourceManager.GetString("Using35Engine", resourceCulture);
            }
        }
    }
}
